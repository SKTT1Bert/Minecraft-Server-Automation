#!/bin/bash

# Minecraft Server Start Script
# Generated by Ansible

MINECRAFT_DIR="{{ minecraft_dir }}"
MINECRAFT_JAR="{{ minecraft_jar }}"
MINECRAFT_MEMORY="{{ minecraft_memory }}"
PID_FILE="$MINECRAFT_DIR/minecraft.pid"
LOG_FILE="$MINECRAFT_DIR/logs/latest.log"

# Create logs directory if it doesn't exist
mkdir -p "$MINECRAFT_DIR/logs"

# Check if server is already running
if [ -f "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    if kill -0 "$PID" 2>/dev/null; then
        echo "Minecraft server is already running (PID: $PID)"
        exit 1
    else
        echo "Removing stale PID file"
        rm -f "$PID_FILE"
    fi
fi

# Change to minecraft directory
cd "$MINECRAFT_DIR" || exit 1

# Start the server in background
echo "Starting Minecraft server..."
nohup java -Xmx${MINECRAFT_MEMORY} -Xms${MINECRAFT_MEMORY} \
    -XX:+UseG1GC \
    -XX:+UnlockExperimentalVMOptions \
    -XX:MaxGCPauseMillis=100 \
    -XX:+DisableExplicitGC \
    -XX:TargetSurvivorRatio=90 \
    -XX:G1NewSizePercent=50 \
    -XX:G1MaxNewSizePercent=80 \
    -XX:G1MixedGCLiveThresholdPercent=50 \
    -jar "$MINECRAFT_JAR" nogui \
    > "$LOG_FILE" 2>&1 &

# Store PID
echo $! > "$PID_FILE"

# Wait a moment for the server to start
sleep 5

# Check if the server is running
if kill -0 $(cat "$PID_FILE") 2>/dev/null; then
    echo "Minecraft server started successfully (PID: $(cat "$PID_FILE"))"
    exit 0
else
    echo "Failed to start Minecraft server"
    rm -f "$PID_FILE"
    exit 1
fi 